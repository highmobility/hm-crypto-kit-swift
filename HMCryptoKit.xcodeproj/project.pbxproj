// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		202B42B52056F48B0037B5F5 /* SecKey+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = 202B42B42056F48B0037B5F5 /* SecKey+Extensions.swift */; };
		OBJ_43 /* HMCryptoKitTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* HMCryptoKitTests.swift */; };
		OBJ_45 /* HMCryptoKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "HMCryptoKit::HMCryptoKit::Product" /* HMCryptoKit.framework */; };
		OBJ_53 /* String+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* String+Extensions.swift */; };
		OBJ_54 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* main.swift */; };
		OBJ_56 /* HMCryptoKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "HMCryptoKit::HMCryptoKit::Product" /* HMCryptoKit.framework */; };
		OBJ_62 /* UInt8Collection+Extensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* UInt8Collection+Extensions.swift */; };
		OBJ_63 /* AES.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* AES.swift */; };
		OBJ_64 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* HMAC.swift */; };
		OBJ_65 /* Keys.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Keys.swift */; };
		OBJ_66 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Random.swift */; };
		OBJ_67 /* SHA.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* SHA.swift */; };
		OBJ_68 /* Signature.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Signature.swift */; };
		OBJ_69 /* HMCryptoKit.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* HMCryptoKit.swift */; };
		OBJ_70 /* HMCryptoKitError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* HMCryptoKitError.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		20627A9E2056D0730074F3A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "HMCryptoKit::HMCryptoKit";
			remoteInfo = HMCryptoKit;
		};
		20627A9F2056D0730074F3A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "HMCryptoKit::HMCryptoKit";
			remoteInfo = HMCryptoKit;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		202B42B42056F48B0037B5F5 /* SecKey+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "SecKey+Extensions.swift"; sourceTree = "<group>"; };
		"HMCryptoKit::HMCryptoKit::Product" /* HMCryptoKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = HMCryptoKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"HMCryptoKit::HMCryptoKitCLT::Product" /* HMCryptoKitCLT */ = {isa = PBXFileReference; lastKnownFileType = text; path = HMCryptoKitCLT; sourceTree = BUILT_PRODUCTS_DIR; };
		"HMCryptoKit::HMCryptoKitTests::Product" /* HMCryptoKitTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = HMCryptoKitTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* UInt8Collection+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UInt8Collection+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_12 /* AES.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AES.swift; sourceTree = "<group>"; };
		OBJ_13 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_14 /* Keys.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Keys.swift; sourceTree = "<group>"; };
		OBJ_15 /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		OBJ_16 /* SHA.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SHA.swift; sourceTree = "<group>"; };
		OBJ_17 /* Signature.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Signature.swift; sourceTree = "<group>"; };
		OBJ_18 /* HMCryptoKit.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMCryptoKit.swift; sourceTree = "<group>"; };
		OBJ_20 /* HMCryptoKitError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMCryptoKitError.swift; sourceTree = "<group>"; };
		OBJ_22 /* String+Extensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "String+Extensions.swift"; sourceTree = "<group>"; };
		OBJ_23 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		OBJ_26 /* HMCryptoKitTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMCryptoKitTests.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_44 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_45 /* HMCryptoKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_55 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_56 /* HMCryptoKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_71 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_11 /* Functions */ = {
			isa = PBXGroup;
			children = (
				OBJ_12 /* AES.swift */,
				OBJ_13 /* HMAC.swift */,
				OBJ_14 /* Keys.swift */,
				OBJ_15 /* Random.swift */,
				OBJ_16 /* SHA.swift */,
				OBJ_17 /* Signature.swift */,
			);
			path = Functions;
			sourceTree = "<group>";
		};
		OBJ_19 /* Other */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* HMCryptoKitError.swift */,
			);
			path = Other;
			sourceTree = "<group>";
		};
		OBJ_21 /* HMCryptoKitCLT */ = {
			isa = PBXGroup;
			children = (
				OBJ_22 /* String+Extensions.swift */,
				OBJ_23 /* main.swift */,
			);
			name = HMCryptoKitCLT;
			path = Sources/HMCryptoKitCLT;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* HMCryptoKitTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_25 /* HMCryptoKitTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* HMCryptoKitTests.swift */,
			);
			name = HMCryptoKitTests;
			path = Tests/HMCryptoKitTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_27 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_28 /* Products */ = {
			isa = PBXGroup;
			children = (
				"HMCryptoKit::HMCryptoKitTests::Product" /* HMCryptoKitTests.xctest */,
				"HMCryptoKit::HMCryptoKitCLT::Product" /* HMCryptoKitCLT */,
				"HMCryptoKit::HMCryptoKit::Product" /* HMCryptoKit.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_24 /* Tests */,
				OBJ_27 /* Dependencies */,
				OBJ_28 /* Products */,
			);
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* HMCryptoKit */,
				OBJ_21 /* HMCryptoKitCLT */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* HMCryptoKit */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Extensions */,
				OBJ_11 /* Functions */,
				OBJ_18 /* HMCryptoKit.swift */,
				OBJ_19 /* Other */,
			);
			name = HMCryptoKit;
			path = Sources/HMCryptoKit;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_9 /* Extensions */ = {
			isa = PBXGroup;
			children = (
				202B42B42056F48B0037B5F5 /* SecKey+Extensions.swift */,
				OBJ_10 /* UInt8Collection+Extensions.swift */,
			);
			path = Extensions;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"HMCryptoKit::HMCryptoKit" /* HMCryptoKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_58 /* Build configuration list for PBXNativeTarget "HMCryptoKit" */;
			buildPhases = (
				OBJ_61 /* Sources */,
				OBJ_71 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = HMCryptoKit;
			productName = HMCryptoKit;
			productReference = "HMCryptoKit::HMCryptoKit::Product" /* HMCryptoKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		"HMCryptoKit::HMCryptoKitCLT" /* HMCryptoKitCLT */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_49 /* Build configuration list for PBXNativeTarget "HMCryptoKitCLT" */;
			buildPhases = (
				OBJ_52 /* Sources */,
				OBJ_55 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_57 /* PBXTargetDependency */,
			);
			name = HMCryptoKitCLT;
			productName = HMCryptoKitCLT;
			productReference = "HMCryptoKit::HMCryptoKitCLT::Product" /* HMCryptoKitCLT */;
			productType = "com.apple.product-type.tool";
		};
		"HMCryptoKit::HMCryptoKitTests" /* HMCryptoKitTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_39 /* Build configuration list for PBXNativeTarget "HMCryptoKitTests" */;
			buildPhases = (
				OBJ_42 /* Sources */,
				OBJ_44 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_46 /* PBXTargetDependency */,
			);
			name = HMCryptoKitTests;
			productName = HMCryptoKitTests;
			productReference = "HMCryptoKit::HMCryptoKitTests::Product" /* HMCryptoKitTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "HMCryptoKit" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5;
			productRefGroup = OBJ_28 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"HMCryptoKit::HMCryptoKitTests" /* HMCryptoKitTests */,
				"HMCryptoKit::HMCryptoKitCLT" /* HMCryptoKitCLT */,
				"HMCryptoKit::HMCryptoKit" /* HMCryptoKit */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_42 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_43 /* HMCryptoKitTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_52 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_53 /* String+Extensions.swift in Sources */,
				OBJ_54 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_61 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_62 /* UInt8Collection+Extensions.swift in Sources */,
				OBJ_63 /* AES.swift in Sources */,
				OBJ_64 /* HMAC.swift in Sources */,
				202B42B52056F48B0037B5F5 /* SecKey+Extensions.swift in Sources */,
				OBJ_65 /* Keys.swift in Sources */,
				OBJ_66 /* Random.swift in Sources */,
				OBJ_67 /* SHA.swift in Sources */,
				OBJ_68 /* Signature.swift in Sources */,
				OBJ_69 /* HMCryptoKit.swift in Sources */,
				OBJ_70 /* HMCryptoKitError.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_46 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "HMCryptoKit::HMCryptoKit" /* HMCryptoKit */;
			targetProxy = 20627A9F2056D0730074F3A6 /* PBXContainerItemProxy */;
		};
		OBJ_57 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "HMCryptoKit::HMCryptoKit" /* HMCryptoKit */;
			targetProxy = 20627A9E2056D0730074F3A6 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				HEADER_SEARCH_PATHS = "$(SRCROOT)/.build/checkouts/**";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = "";
				"OTHER_LDFLAGS[sdk=macosx*]" = (
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "";
				"OTHER_SWIFT_FLAGS[sdk=macosx*]" = "-I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				HEADER_SEARCH_PATHS = "$(SRCROOT)/.build/checkouts/**";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_LDFLAGS = "";
				"OTHER_LDFLAGS[sdk=macosx*]" = (
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "";
				"OTHER_SWIFT_FLAGS[sdk=macosx*]" = "-I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_40 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/copenssl-9210800800123002234",
					"$(SRCROOT)/.build/checkouts/CommonCrypto--4537035743650579681",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKitTests;
			};
			name = Debug;
		};
		OBJ_41 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/copenssl-9210800800123002234",
					"$(SRCROOT)/.build/checkouts/CommonCrypto--4537035743650579681",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKitTests;
			};
			name = Release;
		};
		OBJ_50 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/copenssl-9210800800123002234",
					"$(SRCROOT)/.build/checkouts/CommonCrypto--4537035743650579681",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKitCLT_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKitCLT;
			};
			name = Debug;
		};
		OBJ_51 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/copenssl-9210800800123002234",
					"$(SRCROOT)/.build/checkouts/CommonCrypto--4537035743650579681",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKitCLT_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx @executable_path";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lssl",
					"-L/usr/local/Cellar/openssl/1.0.2n/lib",
					"-lcrypto",
				);
				OTHER_SWIFT_FLAGS = "$(inherited) -I/usr/local/Cellar/openssl/1.0.2n/include -I/usr/local/Cellar/openssl/1.0.2n/include";
				SWIFT_FORCE_DYNAMIC_LINK_STDLIB = YES;
				SWIFT_FORCE_STATIC_LINK_STDLIB = NO;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKitCLT;
			};
			name = Release;
		};
		OBJ_59 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				PRODUCT_BUNDLE_IDENTIFIER = HMCryptoKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKit;
			};
			name = Debug;
		};
		OBJ_60 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				INFOPLIST_FILE = HMCryptoKit.xcodeproj/HMCryptoKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				PRODUCT_BUNDLE_IDENTIFIER = HMCryptoKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = HMCryptoKit;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "HMCryptoKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_39 /* Build configuration list for PBXNativeTarget "HMCryptoKitTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_40 /* Debug */,
				OBJ_41 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_49 /* Build configuration list for PBXNativeTarget "HMCryptoKitCLT" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_50 /* Debug */,
				OBJ_51 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_58 /* Build configuration list for PBXNativeTarget "HMCryptoKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_59 /* Debug */,
				OBJ_60 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
